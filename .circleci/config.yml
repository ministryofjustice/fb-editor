version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  ruby: circleci/ruby@1.4.0
  node: circleci/node@4.5.1
  browser-tools: circleci/browser-tools@1.2.4
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  build:
    docker:
      - image: 'cimg/ruby:2.7.5-node'
    steps:
      - checkout
      - ruby/install-deps
      - run: &node_version
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v14.19.0
            nvm alias default 14.19.0

            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - node/install-packages:
          pkg-manager: yarn
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: main
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  lint:
    docker:
      - image: 'cimg/ruby:2.7.5-node'
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: running rubocop
      - slack/status: *slack_status
  security:
    docker:
      - image: 'cimg/ruby:2.7.5-node'
    steps:
      - checkout
      - ruby/install-deps
      - run: bundle exec brakeman -q --no-pager -i brakeman.ignore
      - slack/status: *slack_status
  rspec_test:
    docker: &test_image
      - image: 'cimg/ruby:2.7.5-node'
      - environment:
          POSTGRES_DB: editor_local
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        image: 'circleci/postgres:12.4'
    environment: &test_environment
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      PGHOST: 127.0.0.1
      PGPASSWORD: password
      PGUSER: postgres
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - run: *node_version
      - node/install-packages:
          pkg-manager: yarn
      - run: &wait_for_db
          name: Wait for DB
          command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
      - run: &db_setup
          name: Database setup
          command: |
            bundle exec rails db:setup
            bundle exec rails db:migrate:ignore_concurrent
      - run:
          name: Running the tests
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=name)
            echo '***********'
            echo $TESTFILES
            echo '***********'

            bundle exec rspec $TESTFILES --profile 10
      - slack/status: *slack_status
  js_test:
    docker:
      - image: 'cimg/ruby:2.7.5-node'
    parallelism: 3
    steps:
      - checkout
      - run: *node_version
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Running the tests
          command: |
            TESTFILES=$(circleci tests glob "test/**/*_test.js" | circleci tests split --split-by=name)
            echo '***********'
            echo $TESTFILES
            echo '***********'

            yarn run jstest $TESTFILES --profile 10
      - slack/status: *slack_status
  build_web_testable_branch:
    working_directory: ~/circle/git/fb-editor
    docker: &ecr_image
      - image: $AWS_BUILD_IMAGE_ECR_ACCOUNT_URL
        aws_auth:
          aws_access_key_id: $AWS_BUILD_IMAGE_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_BUILD_IMAGE_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker: &remote_docker
          version: 20.10.11
          docker_layer_caching: true
      - run: &build_sha
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build testable editor web docker images
          environment:
            ENVIRONMENT_NAME: test
            IMAGE_TYPE: web
          command: './deploy-scripts/bin/build'
      - slack/status: &testable_slack_status
          fail_only: true
          failure_message: ":facepalm:  Failed job ${CIRCLE_JOB} for ${CIRCLE_BRANCH}  :homer-disappear:"
          include_job_number_field: false
  build_workers_testable_branch:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *build_sha
      - run: *deploy_scripts
      - run:
          name: build testable editor workers docker images
          environment:
            ENVIRONMENT_NAME: test
            IMAGE_TYPE: workers
          command: './deploy-scripts/bin/build'
      - slack/status: *testable_slack_status
  deploy_testable_branch:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: &ssh_keys
          fingerprints:
            - 0f:d3:b5:c2:a1:7e:0a:a3:d3:2a:84:41:ef:cc:94:f5
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo 'export BUILD_SHA=$CIRCLE_SHA1' >> $BASH_ENV
            echo 'export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_0fd3b5c2a17e0aa3d32a8441efcc94f5' >> $BASH_ENV
            source $BASH_ENV
      - run: *deploy_scripts
      - run:
          name: deploy to test
          environment:
            APPLICATION_NAME: fb-editor
            PLATFORM_ENV: test
            K8S_NAMESPACE: formbuilder-saas-test
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *testable_slack_status
  remove_testable_editors:
    docker:
      - image: 'cimg/ruby:2.7.5-node'
    steps:
    - checkout
    - ruby/install-deps
    - kubernetes/install-kubectl
    - run: *deploy_scripts
    - run:
        name: set kubernetes context for saas namespace
        command: './deploy-scripts/bin/set_testable_editors_context'
    - run:
        name: remove testable editors
        command: bundle exec rails remove:testable_editors
    - slack/status: *testable_slack_status
  build_web_image:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *build_sha
      - run: *deploy_scripts
      - run:
          name: build web docker images
          environment:
            ENVIRONMENT_NAME: test
            IMAGE_TYPE: web
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  build_workers_image:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *build_sha
      - run: *deploy_scripts
      - run:
          name: build workers docker images
          environment:
            ENVIRONMENT_NAME: test
            IMAGE_TYPE: workers
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_test_eks:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to test (EKS cluster)
          environment:
            APPLICATION_NAME: fb-editor
            PLATFORM_ENV: test
            K8S_NAMESPACE: formbuilder-saas-test
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status: *slack_status
  deploy_to_test_no_branching_eks:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to test no branching
          environment:
            APPLICATION_NAME: fb-editor
            PLATFORM_ENV: test
            K8S_NAMESPACE: formbuilder-saas-test
            DISABLE_BRANCHING: 'true'
          command: './deploy-scripts/bin/deploy-eks'
  acceptance_tests_eks:
    docker: *test_image
    resource_class: large
    environment: *test_environment
    parallelism: 7
    steps:
      - checkout
      - ruby/install-deps
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - run: *wait_for_db
      - run: *db_setup
      - run:
          name: Run acceptance tests
          command: |
            EDITOR_APP=https://fb-editor-test.apps.live.cloud-platform.service.justice.gov.uk
            echo 'export ACCEPTANCE_TESTS_EDITOR_APP=$EDITOR_APP' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_USER=$ACCEPTANCE_TESTS_USER' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_PASSWORD=$ACCEPTANCE_TESTS_PASSWORD' >> $BASH_ENV
            echo 'export CI_MODE=true' >> $BASH_ENV
            source $BASH_ENV

            TESTFILES=$(circleci tests glob "acceptance/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=filename)
            TO_EXCLUDE=acceptance/features/no_branching_spec.rb
            FILTERED_TESTFILES=$(printf '%s\n' "${TESTFILES//$TO_EXCLUDE/}")

            echo '***********'
            echo $FILTERED_TESTFILES
            echo '***********'

            bundle exec rspec --format progress \
              --format RspecJunitFormatter \
              --out ~/acceptance/acceptance.xml \
              $FILTERED_TESTFILES
      - store_test_results:
          path: ~/acceptance
      - slack/status: *slack_status
  acceptance_tests_no_branching_eks:
    docker: *test_image
    resource_class: large
    environment: *test_environment
    steps:
      - checkout
      - ruby/install-deps
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - run: *wait_for_db
      - run: *db_setup
      - run:
          name: Run no branching acceptance tests
          command: |
            EDITOR_APP=https://fb-editor-test-no-branching.apps.live.cloud-platform.service.justice.gov.uk
            echo 'export ACCEPTANCE_TESTS_EDITOR_APP=$EDITOR_APP' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_USER=$ACCEPTANCE_TESTS_USER' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_PASSWORD=$ACCEPTANCE_TESTS_PASSWORD' >> $BASH_ENV
            echo 'export CI_MODE=true' >> $BASH_ENV
            source $BASH_ENV

            bundle exec rspec --format progress \
              --format RspecJunitFormatter \
              acceptance/features/no_branching_spec.rb
      - slack/status: *testable_slack_status
  testable_branch_acceptance_tests:
    docker: *test_image
    resource_class: large
    environment: *test_environment
    parallelism: 7
    steps:
      - checkout
      - ruby/install-deps
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - run: *wait_for_db
      - run: *db_setup
      - run:
          name: Run acceptance tests
          command: |
            EDITOR_APP=https://${CIRCLE_BRANCH}.apps.live.cloud-platform.service.justice.gov.uk
            echo 'export ACCEPTANCE_TESTS_EDITOR_APP=$EDITOR_APP' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_USER=$ACCEPTANCE_TESTS_USER' >> $BASH_ENV
            echo 'export ACCEPTANCE_TESTS_PASSWORD=$ACCEPTANCE_TESTS_PASSWORD' >> $BASH_ENV
            echo 'export CI_MODE=true' >> $BASH_ENV
            source $BASH_ENV

            TESTFILES=$(circleci tests glob "acceptance/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=filename)
            TO_EXCLUDE=acceptance/features/no_branching_spec.rb
            FILTERED_TESTFILES=$(printf '%s\n' "${TESTFILES//$TO_EXCLUDE/}")

            echo '***********'
            echo $FILTERED_TESTFILES
            echo '***********'

            bundle exec rspec --format progress \
              --format RspecJunitFormatter \
              --out ~/acceptance/acceptance.xml \
              $FILTERED_TESTFILES
      - store_test_results:
          path: ~/acceptance
      - slack/status: *testable_slack_status
  deploy_to_live_eks:
    working_directory: ~/circle/git/fb-editor
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: deploy to live (eks)
          environment:
            APPLICATION_NAME: fb-editor
            PLATFORM_ENV: live
            K8S_NAMESPACE: formbuilder-saas-live
          command: './deploy-scripts/bin/deploy-eks'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live (eks) :guitar:"
          failure_message: ":alert:  Failed to deploy to Live (eks)  :try_not_to_cry:"
          include_job_number_field: false

workflows:
  version: 2
  tear_down_testable_editors:
    jobs:
      - remove_testable_editors:
          filters:
            branches:
              only:
                - main
  test_and_build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /testable-.*/
      - lint:
          requires:
            - build
      - security:
          requires:
            - build
      - rspec_test:
          requires:
            - build
      - js_test:
          requires:
            - build
      - build_web_image:
          requires:
            - lint
            - security
            - rspec_test
            - js_test
          filters:
            branches:
              only:
                - main
      - build_workers_image:
          requires:
            - lint
            - security
            - rspec_test
            - js_test
          filters:
            branches:
              only:
                - main
      - deploy_to_test_eks:
          requires:
            - build_web_image
            - build_workers_image
      - deploy_to_test_no_branching_eks:
          requires:
            - build_web_image
            - build_workers_image
      - acceptance_tests_eks:
          requires:
            - deploy_to_test_eks
      - acceptance_tests_no_branching_eks:
          requires:
            - deploy_to_test_no_branching_eks
      - slack/approval-notification:
          message: ":portalorangeparrot:  Deployment to Live pending approval  :portalblueparrot:"
          include_job_number_field: false
          requires:
            - acceptance_tests_eks
            - acceptance_tests_no_branching_eks
      - confirm_live_deploy:
          type: approval
          requires:
            - acceptance_tests_eks
            - acceptance_tests_no_branching_eks
      - deploy_to_live_eks:
          requires:
            - confirm_live_deploy
  deploy_testable_branch:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /testable-.*/
      - lint:
          requires:
            - build
      - security:
          requires:
            - build
      - rspec_test:
          requires:
            - build
      - js_test:
          requires:
            - build
      - build_web_testable_branch:
          requires:
            - lint
            - security
            - rspec_test
            - js_test
          filters:
            branches:
              only:
                - /testable-.*/
      - build_workers_testable_branch:
          requires:
            - lint
            - security
            - rspec_test
            - js_test
          filters:
            branches:
              only:
                - /testable-.*/
      - deploy_testable_branch:
          requires:
            - build_web_testable_branch
            - build_workers_testable_branch
      - testable_branch_acceptance_tests:
          requires:
            - deploy_testable_branch
      - slack/approval-notification:
          message: ":test_tube: :test_tube: :test_tube:\nSuccessfully deployed branch\nVisit: https://${CIRCLE_BRANCH}.apps.live.cloud-platform.service.justice.gov.uk\n:test_tube: :test_tube: :test_tube:"
          include_job_number_field: false
          requires:
            - testable_branch_acceptance_tests
