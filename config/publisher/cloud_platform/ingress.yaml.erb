apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: <%= service_slug %>-ingress
  namespace: <%= namespace %>
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/custom-http-errors: "400, 401, 403, 404, 500, 503"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      server_tokens off;
      location /metrics {
        deny all;
        return 401;
      }
    external-dns.alpha.kubernetes.io/set-identifier: <%= service_slug %>-ingress-<%= namespace %>-green
    external-dns.alpha.kubernetes.io/aws-weight: "100"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecAuditEngine On
      SecRuleEngine DetectionOnly
      SecDefaultAction "phase:2,pass,log,tag:github_team=form-builder"
      SecRuleRemoveById 941100
      SecRuleUpdateTargetByTag attack-xss !REQUEST_COOKIES:_fb_runner_session
      SecRuleUpdateTargetByTag attack-sqli !REQUEST_COOKIES:_fb_runner_session
spec:
  ingressClassName: modsec-non-prod
  tls:
    - hosts:
      - <%= hostname %>
      secretName: tls-certificate
  rules:
  - host: <%= hostname %>
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: <%= service_slug %>
            port:
              number: <%= container_port %>
